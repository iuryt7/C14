name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4 

      - name: Set up Poetry
        uses: python-poetry/setup-poetry@v2
        with:
          version: "1.1"

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        run: |
          pyteste .\c14\testes.py
        continue-on-error: true

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test-results 

  build:
    runs-on: ubuntu-latest
    needs: []

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Poetry
        uses: python-poetry/setup-poetry@v2
        with:
          version: "1.1"

      - name: Install dependencies
        run: |
          poetry install

      - name: Build Package
        run: |
          poetry build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4 
        with:
          name: build-artifacts
          path: dist/

  notification:
    runs-on: ubuntu-latest
    needs: [tests, build] 
    if: always() 

    steps:
      - name: Send Email Notification
        run: |
          echo "Pipeline Executado!" | mail -s "Status da Pipeline" ${{ secrets.NOTIFY_EMAIL }}
        env:
          NOTIFY_EMAIL: ${{ secrets.NOTIFY_EMAIL }}
