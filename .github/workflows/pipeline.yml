name: CI/CD Pipeline da Calculadora

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Verificando Repo
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Instalando poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Instalando dependencias
        run: |
          poetry install

      - name: Rodando os testes
        run: |
          pytest .\c14\testes.py
        continue-on-error: true

      - name: Upload dos resultados dos testes
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test-results


  build:
    runs-on: ubuntu-latest
    needs: []

    steps:
      - name: Verificando Repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Instalando Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Instalando Dependencias
        run: |
          poetry install

      - name: Buildando o pacote
        run: |
          poetry build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  notification:
    runs-on: ubuntu-latest
    needs: [tests, build]
    if: always()

    steps:
      - name: Enviando a notificação por email
        run: |
          echo "Pipeline Executado!" | mail -s "Status da Pipeline" ${{ secrets.NOTIFY_EMAIL }}
        env:
          NOTIFY_EMAIL: ${{ secrets.NOTIFY_EMAIL }}
